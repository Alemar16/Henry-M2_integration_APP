{"ast":null,"code":"var _jsxFileName = \"D:\\\\ARMANDO\\\\Escritorio\\\\APP-Rick-and-Morty-main\\\\src\\\\components\\\\Targetas\\\\Cards\\\\Card\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from './Card.module.css';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addFavorite, removeFavorite } from '../../../Redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card(props) {\n  _s();\n  const {\n    id,\n    addFavorite,\n    removeFavorite,\n    myFavorites\n  } = props;\n  const [isFav, setIsFav] = useState(false);\n\n  /*  \n  Si el estado isFav es true, entonces settea ese estado en false, y despacha la función removeFav que recibiste por props pasándole el id del personaje como argumento.\n  \n  Si el estado isFav es false, entonces settea ese estado en true, y despacha la función addFav que recibiste por props, pasándole props como argumento. */\n  const handleFavorite = () => {\n    if (isFav) {\n      setIsFav(false);\n      removeFavorite(props.id);\n    } else {\n      setIsFav(true);\n      addFavorite(props);\n    }\n  };\n\n  //---El useEffect comprueba que la card esté dentro de favoritos------- \n  //---El useEfect actualiza la lista de favorito------------------------\n  useEffect(() => {\n    myFavorites.forEach(fav => {\n      if (fav.id === props.id) {\n        //esta es la lista de favoritos\n        setIsFav(true);\n      }\n    });\n  }, [props.id, myFavorites]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.card,\n    children: [isFav ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.favButton,\n      onClick: handleFavorite,\n      children: \"\\u2764\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.favButton,\n      onClick: handleFavorite,\n      children: \"\\uD83E\\uDD0D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), !props.isFavorite && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.cardButton,\n      onClick: props.onCloseCard,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.name,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.speciesYGenero,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.species\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.gender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/detail/${id}`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.image,\n        alt: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n//----------fuera del Componente -----------\n// ---------se mejoran las actios para que se puedan dispachar---------\n_s(Card, \"P/ohr7L6r3Ai4GOhTgqo0B9M8uQ=\");\n_c = Card;\nconst mapDispatchToProps = dispatch => {\n  return {\n    addFavorite: character => {\n      dispatch(addFavorite(character));\n    },\n    removeFavorite: id => {\n      dispatch(removeFavorite(id));\n    }\n  };\n};\n\n//----myFavorites ya es una parte de las props\nconst mapStateToProps = state => {\n  return {\n    myFavorites: state.myFavorites\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Card); //mapDispatchToProps se usa porque no se quiere traer el estado global, ya eur no se necesita\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","styles","Link","connect","addFavorite","removeFavorite","jsxDEV","_jsxDEV","Card","props","_s","id","myFavorites","isFav","setIsFav","handleFavorite","forEach","fav","className","card","children","favButton","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isFavorite","cardButton","onCloseCard","name","speciesYGenero","species","gender","to","src","image","alt","_c","mapDispatchToProps","dispatch","character","mapStateToProps","state","$RefreshReg$"],"sources":["D:/ARMANDO/Escritorio/APP-Rick-and-Morty-main/src/components/Targetas/Cards/Card/Card.jsx"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport styles from './Card.module.css';\nimport { Link } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { addFavorite, removeFavorite } from '../../../Redux/actions';\n\n\nfunction Card(props) {\n  const{id, addFavorite, removeFavorite, myFavorites}= (props)\nconst[isFav, setIsFav]= useState(false)\n\n/*  \nSi el estado isFav es true, entonces settea ese estado en false, y despacha la función removeFav que recibiste por props pasándole el id del personaje como argumento.\n\nSi el estado isFav es false, entonces settea ese estado en true, y despacha la función addFav que recibiste por props, pasándole props como argumento. */\n  const handleFavorite = () => {\n    if (isFav) {\n      setIsFav(false);\n      removeFavorite(props.id)\n    } else {\n      setIsFav(true);\n      addFavorite(props);\n    }\n  }\n\n  //---El useEffect comprueba que la card esté dentro de favoritos------- \n  //---El useEfect actualiza la lista de favorito------------------------\n  useEffect(() => {\n    myFavorites.forEach((fav) => {\n      if (fav.id === props.id) {\n        //esta es la lista de favoritos\n        setIsFav(true);\n      }\n    });\n  }, [props.id, myFavorites]);\n  \n  return (\n    <div className={styles.card}>\n      {isFav ? (\n        <button className={styles.favButton} onClick={handleFavorite}>\n          ❤️\n        </button>\n      ) : (\n        <button className={styles.favButton} onClick={handleFavorite}>\n          🤍\n        </button>\n      )}\n\n      {/*  El condicional \"!props.isFavorite && ...\" se usa para quitar el boton X de la card cuando este \"true\" en el componente Favorites */}\n      {!props.isFavorite && (\n        <button className={styles.cardButton} onClick={props.onCloseCard}>\n          X\n        </button>\n      )}\n      <h3>{props.id}</h3>\n      <div className={styles.name}>\n        <h2>{props.name}</h2>\n      </div>\n      <div className={styles.speciesYGenero}>\n        <h2>{props.species}</h2>\n        <h2>{props.gender}</h2>\n      </div>\n\n      {/* al hacer click en la imagen y el nombre de la card te renderiza a detail */}\n      <Link to={`/detail/${id}`}>\n        <img src={props.image} alt={props.name} />\n      </Link>\n    </div>\n  );\n}\n\n//----------fuera del Componente -----------\n// ---------se mejoran las actios para que se puedan dispachar---------\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addFavorite: (character) => {\n      dispatch(addFavorite(character))\n    },\n    removeFavorite: (id) => {\n      dispatch(removeFavorite(id))\n    }\n  }\n}\n\n\n//----myFavorites ya es una parte de las props\nconst mapStateToProps = (state) => {\n  return{\n    myFavorites: state.myFavorites\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card); //mapDispatchToProps se usa porque no se quiere traer el estado global, ya eur no se necesita\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}